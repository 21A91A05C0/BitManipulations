The shortest path length between two given nodes such that adjacent nodes are at bit difference 2
Given an Unweighted and Undirected graph consisting of N nodes and two integers a and b. 
The edge between any two nodes exists only if thebit difference between them is 2, the task is to find the length of the shortest Path between nodes a and b. 
If a path does not exist between the nodes a and b, then print -1. 
Input Format :
First line contains three integers N , a and b. 
Output Format :
Print the shortest path if exits otherwise print -1. 
Input :
15 15 3
Output :
1
Constraints :
1 <= N <= 10^5
1 <= a < b <= 10^5

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int a,n,m;
    cin>>a>>n>>m;
    int x=n^m;
    int c=0;
    for(int i=31;i>=0;i--)
    {
        if(x&(1<<i)) c++;
    }
    if(c%2!=0)
    {
        cout<<-1<<endl;
    }
    else
    {
        cout<<c/2<<endl;
    }
}
